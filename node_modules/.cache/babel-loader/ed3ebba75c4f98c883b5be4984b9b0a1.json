{"ast":null,"code":"import React from 'react';\nimport { renderIntoDocument } from 'react-dom/test-utils';\n\nconst Validator = formSelector => {\n  var formRules = {}; // Quy ước tạo rules\n  // Nếu có lỗi thì return  'error message'\n  // Nếu không có lỗi thì return 'undefined'\n\n  var ValidatorRules = {\n    required: function (value) {\n      return value ? undefined : 'Please enter this field';\n    },\n    email: function (value) {\n      var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return regex.test(value) ? undefined : 'Please enter your email address';\n    },\n    min: function (min) {\n      return function (value) {\n        return value.length >= min ? undefined : 'Please enter at least 6 characters';\n      };\n    }\n  }; // Lấy ra form element trong dom\n\n  var formElement = document.querySelector(formSelector); // Chỉ xử lý khi có element trong dom\n\n  if (formElement) {\n    var inputs = formElement.querySelectorAll('[name][rules]');\n\n    for (var input of inputs) {\n      var rules = input.getAttribute('rules').split('|');\n\n      for (var rule of rules) {\n        if (rule.includes(':')) {\n          var ruleInfo = rule.split(':');\n          rule = ruleInfo[0];\n        }\n\n        var ruleFunc = ValidatorRules[rule]; // console.log(rule);\n\n        if (Array.isArray(formRules[input.name])) {\n          formRules[input.name].push(ruleFunc);\n        } else {\n          formRules[input.name] = [ruleFunc];\n        }\n      }\n    }\n\n    console.log(formRules);\n  }\n};\n\n_c = Validator;\nexport default Validator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validator\");","map":{"version":3,"names":["React","renderIntoDocument","Validator","formSelector","formRules","ValidatorRules","required","value","undefined","email","regex","test","min","length","formElement","document","querySelector","inputs","querySelectorAll","input","rules","getAttribute","split","rule","includes","ruleInfo","ruleFunc","Array","isArray","name","push","console","log"],"sources":["C:/apps/Flower_Delivery_Website/src/general/Validator.js"],"sourcesContent":["import React from 'react'\r\nimport { renderIntoDocument } from 'react-dom/test-utils';\r\n\r\nconst Validator = (formSelector) => {\r\n    var formRules = {};\r\n\r\n    // Quy ước tạo rules\r\n    // Nếu có lỗi thì return  'error message'\r\n    // Nếu không có lỗi thì return 'undefined'\r\n\r\n    var ValidatorRules = {\r\n        required: function(value) {\r\n            return value ? undefined : 'Please enter this field'\r\n        },\r\n        email: function(value) {\r\n            var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            return regex.test(value) ? undefined : 'Please enter your email address'\r\n        },\r\n        min: function(min) {\r\n            return function(value) {\r\n                return value.length >= min ? undefined : 'Please enter at least 6 characters'\r\n            }\r\n        },\r\n    }\r\n\r\n    // Lấy ra form element trong dom\r\n    var formElement = document.querySelector(formSelector);\r\n\r\n    \r\n    // Chỉ xử lý khi có element trong dom\r\n    if (formElement) {\r\n\r\n        var  inputs = formElement.querySelectorAll('[name][rules]');\r\n        for (var input of inputs) {\r\n\r\n            var rules = input.getAttribute('rules').split('|');\r\n            for (var rule of rules) {\r\n\r\n                if (rule.includes(':')) {\r\n                    var ruleInfo = rule.split(':');\r\n                    rule = ruleInfo[0];\r\n                }\r\n\r\n                var ruleFunc =  ValidatorRules[rule]\r\n\r\n                \r\n\r\n                // console.log(rule);\r\n                if (Array.isArray(formRules[input.name])) {\r\n                    formRules[input.name].push(ruleFunc);\r\n                }\r\n                else {\r\n                    formRules[input.name] = [ruleFunc];\r\n                }\r\n            }\r\n        }\r\n        console.log(formRules);\r\n    }\r\n}\r\n\r\nexport default Validator"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AAEA,MAAMC,SAAS,GAAIC,YAAD,IAAkB;EAChC,IAAIC,SAAS,GAAG,EAAhB,CADgC,CAGhC;EACA;EACA;;EAEA,IAAIC,cAAc,GAAG;IACjBC,QAAQ,EAAE,UAASC,KAAT,EAAgB;MACtB,OAAOA,KAAK,GAAGC,SAAH,GAAe,yBAA3B;IACH,CAHgB;IAIjBC,KAAK,EAAE,UAASF,KAAT,EAAgB;MACnB,IAAIG,KAAK,GAAG,+CAAZ;MACA,OAAOA,KAAK,CAACC,IAAN,CAAWJ,KAAX,IAAoBC,SAApB,GAAgC,iCAAvC;IACH,CAPgB;IAQjBI,GAAG,EAAE,UAASA,GAAT,EAAc;MACf,OAAO,UAASL,KAAT,EAAgB;QACnB,OAAOA,KAAK,CAACM,MAAN,IAAgBD,GAAhB,GAAsBJ,SAAtB,GAAkC,oCAAzC;MACH,CAFD;IAGH;EAZgB,CAArB,CAPgC,CAsBhC;;EACA,IAAIM,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuBb,YAAvB,CAAlB,CAvBgC,CA0BhC;;EACA,IAAIW,WAAJ,EAAiB;IAEb,IAAKG,MAAM,GAAGH,WAAW,CAACI,gBAAZ,CAA6B,eAA7B,CAAd;;IACA,KAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;MAEtB,IAAIG,KAAK,GAAGD,KAAK,CAACE,YAAN,CAAmB,OAAnB,EAA4BC,KAA5B,CAAkC,GAAlC,CAAZ;;MACA,KAAK,IAAIC,IAAT,IAAiBH,KAAjB,EAAwB;QAEpB,IAAIG,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EAAwB;UACpB,IAAIC,QAAQ,GAAGF,IAAI,CAACD,KAAL,CAAW,GAAX,CAAf;UACAC,IAAI,GAAGE,QAAQ,CAAC,CAAD,CAAf;QACH;;QAED,IAAIC,QAAQ,GAAIrB,cAAc,CAACkB,IAAD,CAA9B,CAPoB,CAWpB;;QACA,IAAII,KAAK,CAACC,OAAN,CAAcxB,SAAS,CAACe,KAAK,CAACU,IAAP,CAAvB,CAAJ,EAA0C;UACtCzB,SAAS,CAACe,KAAK,CAACU,IAAP,CAAT,CAAsBC,IAAtB,CAA2BJ,QAA3B;QACH,CAFD,MAGK;UACDtB,SAAS,CAACe,KAAK,CAACU,IAAP,CAAT,GAAwB,CAACH,QAAD,CAAxB;QACH;MACJ;IACJ;;IACDK,OAAO,CAACC,GAAR,CAAY5B,SAAZ;EACH;AACJ,CAvDD;;KAAMF,S;AAyDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}