{"ast":null,"code":"const Validator = function (formSelector) {\n  let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function getParent(element, selector) {\n    while (element.parentElement) {\n      if (element.parentElement.matches(selector)) {\n        return element.parentElement;\n      }\n\n      element = element.parentElement;\n    }\n  }\n\n  var formRules = {}; // Quy ước tạo rules\n  // Nếu có lỗi thì return  'error message'\n  // Nếu không có lỗi thì return 'undefined'\n\n  var ValidatorRules = {\n    required: function (value) {\n      return value ? undefined : 'Please enter this field';\n    },\n    email: function (value) {\n      var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return regex.test(value) ? undefined : 'Please enter your email address';\n    },\n    min: function (min) {\n      return function (value) {\n        return value.length >= min ? undefined : 'Please enter at least 6 characters';\n      };\n    }\n  }; // Lấy ra form element trong dom\n\n  var formElement = document.querySelector(formSelector); // Chỉ xử lý khi có element trong dom\n\n  if (formElement) {\n    var inputs = formElement.querySelectorAll('[name][rules]');\n\n    for (var input of inputs) {\n      var rules = input.getAttribute('rules').split('|');\n\n      for (var rule of rules) {\n        var ruleInfo;\n        var isRulesHasValue = rule.includes(':');\n\n        if (isRulesHasValue) {\n          ruleInfo = rule.split(':');\n          rule = ruleInfo[0];\n        }\n\n        var ruleFunc = ValidatorRules[rule];\n\n        if (isRulesHasValue) {\n          ruleFunc = ruleFunc(ruleInfo[1]);\n        } // console.log(rule);\n\n\n        if (Array.isArray(formRules[input.name])) {\n          formRules[input.name].push(ruleFunc);\n        } else {\n          formRules[input.name] = [ruleFunc];\n        }\n      } // Lắng nghe sự kiện để validate (blur, change, ...)\n\n\n      input.onblur = handleValidate;\n      input.oninput = handleClearError;\n    } // Hàm thực hiện validate\n\n\n    function handleValidate(e) {\n      var rules = formRules[e.target.name];\n      var errorMessage;\n\n      for (var rule of rules) {\n        errorMessage = rule(e.target.value);\n        if (errorMessage) break;\n      } // Nếu có lỗi thì hiển thị ra UI\n\n\n      if (errorMessage) {\n        var formGroup = getParent(e.target, '.auth-form__group');\n\n        if (formGroup) {\n          formGroup.classList.add('invalid');\n          var formMesages = formGroup.querySelector('.form-message');\n\n          if (formMesages) {\n            formMesages.innerText = errorMessage;\n          }\n        }\n      }\n\n      return !errorMessage;\n    } // Hàm xóa message Lỗi\n\n\n    function handleClearError(e) {\n      var formGroup = getParent(e.target, '.auth-form__group');\n\n      if (formGroup.classList.contains('invalid')) {\n        formGroup.classList.remove('invalid');\n      }\n\n      var formMesages = formGroup.querySelector('.form-message');\n\n      if (formMesages) {\n        formMesages.innerText = '';\n      }\n    } // Xử lý hành vi submit form \n\n\n    formElement.onsubmit = function (e) {\n      e.preventDefault();\n      var isValid = true;\n      var inputs = formElement.querySelectorAll('[name][rules]');\n\n      for (var input of inputs) {\n        if (!handleValidate({\n          target: input\n        })) {\n          isValid = false;\n        }\n      } // Khi không lỗi thì submit form\n\n\n      if (isValid) {\n        // if (option.onSubmit==='function') {\n        var enableInputs = formElement.querySelectorAll('[name]');\n        var formValues = Array.from(enableInputs).reduce(function (values, input) {\n          values[input.name] = input.value;\n          return values;\n        }, {});\n        option.onSubmit(formValues); // }\n        // else {\n        //     formElement.submit();\n        // }\n      }\n    }; // console.log(formRules);\n\n  }\n};\n\n_c = Validator;\nexport default Validator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validator\");","map":{"version":3,"names":["Validator","formSelector","option","getParent","element","selector","parentElement","matches","formRules","ValidatorRules","required","value","undefined","email","regex","test","min","length","formElement","document","querySelector","inputs","querySelectorAll","input","rules","getAttribute","split","rule","ruleInfo","isRulesHasValue","includes","ruleFunc","Array","isArray","name","push","onblur","handleValidate","oninput","handleClearError","e","target","errorMessage","formGroup","classList","add","formMesages","innerText","contains","remove","onsubmit","preventDefault","isValid","enableInputs","formValues","from","reduce","values","onSubmit"],"sources":["C:/apps/Flower_Delivery_Website/src/general/Validator.js"],"sourcesContent":["\r\n\r\nconst Validator = (formSelector, option ={}) => {\r\n\r\n    function getParent(element, selector) {\r\n\r\n        while (element.parentElement) {\r\n            if (element.parentElement.matches(selector)) {\r\n                return element.parentElement;\r\n            }\r\n            element = element.parentElement;\r\n        }\r\n\r\n    }\r\n\r\n    var formRules = {};\r\n\r\n    // Quy ước tạo rules\r\n    // Nếu có lỗi thì return  'error message'\r\n    // Nếu không có lỗi thì return 'undefined'\r\n\r\n    var ValidatorRules = {\r\n        required: function (value) {\r\n            return value ? undefined : 'Please enter this field'\r\n        },\r\n        email: function (value) {\r\n            var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            return regex.test(value) ? undefined : 'Please enter your email address'\r\n        },\r\n        min: function (min) {\r\n            return function (value) {\r\n                return value.length >= min ? undefined : 'Please enter at least 6 characters'\r\n            }\r\n        },\r\n    }\r\n\r\n    // Lấy ra form element trong dom\r\n    var formElement = document.querySelector(formSelector);\r\n\r\n\r\n    // Chỉ xử lý khi có element trong dom\r\n    if (formElement) {\r\n\r\n        var inputs = formElement.querySelectorAll('[name][rules]');\r\n        for (var input of inputs) {\r\n            var rules = input.getAttribute('rules').split('|');\r\n            for (var rule of rules) {\r\n                var ruleInfo;\r\n                var isRulesHasValue = rule.includes(':');\r\n                if (isRulesHasValue) {\r\n                    ruleInfo = rule.split(':');\r\n                    rule = ruleInfo[0];\r\n                }\r\n                var ruleFunc = ValidatorRules[rule]\r\n                if (isRulesHasValue) {\r\n                    ruleFunc = ruleFunc(ruleInfo[1]);\r\n                }\r\n                // console.log(rule);\r\n                if (Array.isArray(formRules[input.name])) {\r\n                    formRules[input.name].push(ruleFunc);\r\n                }\r\n                else {\r\n                    formRules[input.name] = [ruleFunc];\r\n                }\r\n            }\r\n\r\n            // Lắng nghe sự kiện để validate (blur, change, ...)\r\n            input.onblur = handleValidate;\r\n\r\n            input.oninput = handleClearError;\r\n        }\r\n\r\n        // Hàm thực hiện validate\r\n        function handleValidate(e) {\r\n            var rules = formRules[e.target.name];\r\n            var errorMessage;\r\n\r\n            for (var rule of rules) {\r\n                errorMessage = rule(e.target.value);\r\n                if (errorMessage) break;\r\n            }\r\n\r\n\r\n            // Nếu có lỗi thì hiển thị ra UI\r\n            if (errorMessage) {\r\n                var formGroup = getParent(e.target, '.auth-form__group');\r\n                if (formGroup) {\r\n                    formGroup.classList.add('invalid');\r\n                    var formMesages = formGroup.querySelector('.form-message');\r\n                    if (formMesages) {\r\n                        formMesages.innerText = errorMessage;\r\n                    }\r\n                }\r\n            }\r\n            return !errorMessage;\r\n\r\n        }\r\n        // Hàm xóa message Lỗi\r\n        function handleClearError(e) {\r\n            var formGroup = getParent(e.target, '.auth-form__group');\r\n            if (formGroup.classList.contains('invalid')) {\r\n                formGroup.classList.remove('invalid')\r\n            }\r\n            var formMesages = formGroup.querySelector('.form-message');\r\n            if (formMesages) {\r\n                formMesages.innerText = '';\r\n            }\r\n        }\r\n\r\n        // Xử lý hành vi submit form \r\n        formElement.onsubmit = function(e) {\r\n            e.preventDefault();\r\n\r\n            var isValid = true;\r\n\r\n            var inputs = formElement.querySelectorAll('[name][rules]');\r\n            for (var input of inputs) {\r\n                if (!handleValidate({target: input})) {\r\n                    isValid = false;\r\n                }\r\n            }\r\n            // Khi không lỗi thì submit form\r\n            if (isValid) {\r\n\r\n                // if (option.onSubmit==='function') {\r\n\r\n                    var enableInputs = formElement.querySelectorAll('[name]');\r\n                    var formValues = Array.from(enableInputs).reduce(function (values, input) {\r\n                        values[input.name] = input.value;\r\n                        return values;\r\n                    }, {});\r\n                    option.onSubmit(formValues);\r\n                // }\r\n                // else {\r\n                //     formElement.submit();\r\n                // }\r\n            }\r\n\r\n        }\r\n        // console.log(formRules);\r\n    }\r\n}\r\n\r\nexport default Validator"],"mappings":"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"},"metadata":{},"sourceType":"module"}