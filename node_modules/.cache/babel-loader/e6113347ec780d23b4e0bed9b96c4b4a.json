{"ast":null,"code":"// Đối tượng `Validator`\nexport default function Validator(options) {\n  function getParent(element, selector) {\n    while (element.parentElement) {\n      if (element.parentElement.matches(selector)) {\n        return element.parentElement;\n      }\n\n      element = element.parentElement;\n    }\n  }\n\n  var selectorRules = {}; // Hàm thực hiện validate\n\n  function validate(inputElement, rule) {\n    var errorElement = getParent(inputElement, options.formGroupSelector).querySelector(options.errorSelector);\n    var errorMessage; // Lấy ra các rules của selector\n\n    var rules = selectorRules[rule.selector]; // Lặp qua từng rule & kiểm tra\n    // Nếu có lỗi thì dừng việc kiểm\n\n    for (var i = 0; i < rules.length; ++i) {\n      switch (inputElement.type) {\n        case 'radio':\n        case 'checkbox':\n          errorMessage = rules[i](formElement.querySelector(rule.selector + ':checked'));\n          break;\n\n        default:\n          errorMessage = rules[i](inputElement.value);\n      }\n\n      if (errorMessage) break;\n    }\n\n    if (errorMessage) {\n      errorElement.innerText = errorMessage;\n      getParent(inputElement, options.formGroupSelector).classList.add('invalid');\n    } else {\n      errorElement.innerText = '';\n      getParent(inputElement, options.formGroupSelector).classList.remove('invalid');\n    }\n\n    return !errorMessage;\n  } // Lấy element của form cần validate\n\n\n  var formElement = document.querySelector(options.form);\n\n  if (formElement) {\n    // Khi submit form\n    formElement.onsubmit = function (e) {\n      e.preventDefault();\n      var isFormValid = true; // Lặp qua từng rules và validate\n\n      options.rules.forEach(function (rule) {\n        var inputElement = formElement.querySelector(rule.selector);\n        var isValid = validate(inputElement, rule);\n\n        if (!isValid) {\n          isFormValid = false;\n        }\n      });\n\n      if (isFormValid) {\n        // Trường hợp submit với javascript\n        if (typeof options.onSubmit === 'function') {\n          var enableInputs = formElement.querySelectorAll('[name]');\n          var formValues = Array.from(enableInputs).reduce(function (values, input) {\n            switch (input.type) {\n              case 'radio':\n                values[input.name] = formElement.querySelector('input[name=\"' + input.name + '\"]:checked').value;\n                break;\n\n              case 'checkbox':\n                if (!input.matches(':checked')) {\n                  values[input.name] = '';\n                  return values;\n                }\n\n                if (!Array.isArray(values[input.name])) {\n                  values[input.name] = [];\n                }\n\n                values[input.name].push(input.value);\n                break;\n\n              case 'file':\n                values[input.name] = input.files;\n                break;\n\n              default:\n                values[input.name] = input.value;\n            }\n\n            return values;\n          }, {});\n          options.onSubmit(formValues);\n        } // Trường hợp submit với hành vi mặc định\n        else {\n          formElement.submit();\n        }\n      }\n    }; // Lặp qua mỗi rule và xử lý (lắng nghe sự kiện blur, input, ...)\n\n\n    options.rules.forEach(function (rule) {\n      // Lưu lại các rules cho mỗi input\n      if (Array.isArray(selectorRules[rule.selector])) {\n        selectorRules[rule.selector].push(rule.test);\n      } else {\n        selectorRules[rule.selector] = [rule.test];\n      }\n\n      var inputElements = formElement.querySelectorAll(rule.selector);\n      Array.from(inputElements).forEach(function (inputElement) {\n        // Xử lý trường hợp blur khỏi input\n        inputElement.onblur = function () {\n          validate(inputElement, rule);\n        }; // Xử lý mỗi khi người dùng nhập vào input\n\n\n        inputElement.oninput = function () {\n          var errorElement = getParent(inputElement, options.formGroupSelector).querySelector(options.errorSelector);\n          errorElement.innerText = '';\n          getParent(inputElement, options.formGroupSelector).classList.remove('invalid');\n        };\n      });\n    });\n  }\n} // Định nghĩa rules\n// Nguyên tắc của các rules:\n// 1. Khi có lỗi => Trả ra message lỗi\n// 2. Khi hợp lệ => Không trả ra cái gì cả (undefined)\n\n_c = Validator;\n\nValidator.isRequired = function (selector, message) {\n  return {\n    selector: selector,\n    test: function (value) {\n      return value ? undefined : message || 'Vui lòng nhập trường này';\n    }\n  };\n};\n\nValidator.isEmail = function (selector, message) {\n  return {\n    selector: selector,\n    test: function (value) {\n      var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return regex.test(value) ? undefined : message || 'Trường này phải là email';\n    }\n  };\n};\n\nValidator.minLength = function (selector, min, message) {\n  return {\n    selector: selector,\n    test: function (value) {\n      return value.length >= min ? undefined : message || `Vui lòng nhập tối thiểu ${min} kí tự`;\n    }\n  };\n};\n\nValidator.isConfirmed = function (selector, getConfirmValue, message) {\n  return {\n    selector: selector,\n    test: function (value) {\n      return value === getConfirmValue() ? undefined : message || 'Giá trị nhập vào không chính xác';\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Validator\");","map":{"version":3,"names":["Validator","options","getParent","element","selector","parentElement","matches","selectorRules","validate","inputElement","rule","errorElement","formGroupSelector","querySelector","errorSelector","errorMessage","rules","i","length","type","formElement","value","innerText","classList","add","remove","document","form","onsubmit","e","preventDefault","isFormValid","forEach","isValid","onSubmit","enableInputs","querySelectorAll","formValues","Array","from","reduce","values","input","name","isArray","push","files","submit","test","inputElements","onblur","oninput","isRequired","message","undefined","isEmail","regex","minLength","min","isConfirmed","getConfirmValue"],"sources":["C:/apps/Flower_Delivery_Website/src/general/Validator.js"],"sourcesContent":["// Đối tượng `Validator`\r\nexport default function Validator(options) {\r\n    function getParent(element, selector) {\r\n        while (element.parentElement) {\r\n            if (element.parentElement.matches(selector)) {\r\n                return element.parentElement;\r\n            }\r\n            element = element.parentElement;\r\n        }\r\n    }\r\n\r\n    var selectorRules = {};\r\n\r\n    // Hàm thực hiện validate\r\n    function validate(inputElement, rule) {\r\n        var errorElement = getParent(inputElement, options.formGroupSelector).querySelector(options.errorSelector);\r\n        var errorMessage;\r\n\r\n        // Lấy ra các rules của selector\r\n        var rules = selectorRules[rule.selector];\r\n        \r\n        // Lặp qua từng rule & kiểm tra\r\n        // Nếu có lỗi thì dừng việc kiểm\r\n        for (var i = 0; i < rules.length; ++i) {\r\n            switch (inputElement.type) {\r\n                case 'radio':\r\n                case 'checkbox':\r\n                    errorMessage = rules[i](\r\n                        formElement.querySelector(rule.selector + ':checked')\r\n                    );\r\n                    break;\r\n                default:\r\n                    errorMessage = rules[i](inputElement.value);\r\n            }\r\n            if (errorMessage) break;\r\n        }\r\n        \r\n        if (errorMessage) {\r\n            errorElement.innerText = errorMessage;\r\n            getParent(inputElement, options.formGroupSelector).classList.add('invalid');\r\n        } else {\r\n            errorElement.innerText = '';\r\n            getParent(inputElement, options.formGroupSelector).classList.remove('invalid');\r\n        }\r\n\r\n        return !errorMessage;\r\n    }\r\n\r\n    // Lấy element của form cần validate\r\n    var formElement = document.querySelector(options.form);\r\n    if (formElement) {\r\n        // Khi submit form\r\n        formElement.onsubmit = function (e) {\r\n            e.preventDefault();\r\n\r\n            var isFormValid = true;\r\n\r\n            // Lặp qua từng rules và validate\r\n            options.rules.forEach(function (rule) {\r\n                var inputElement = formElement.querySelector(rule.selector);\r\n                var isValid = validate(inputElement, rule);\r\n                if (!isValid) {\r\n                    isFormValid = false;\r\n                }\r\n            });\r\n\r\n            if (isFormValid) {\r\n                // Trường hợp submit với javascript\r\n                if (typeof options.onSubmit === 'function') {\r\n                    var enableInputs = formElement.querySelectorAll('[name]');\r\n                    var formValues = Array.from(enableInputs).reduce(function (values, input) {\r\n                        \r\n                        switch(input.type) {\r\n                            case 'radio':\r\n                                values[input.name] = formElement.querySelector('input[name=\"' + input.name + '\"]:checked').value;\r\n                                break;\r\n                            case 'checkbox':\r\n                                if (!input.matches(':checked')) {\r\n                                    values[input.name] = '';\r\n                                    return values;\r\n                                }\r\n                                if (!Array.isArray(values[input.name])) {\r\n                                    values[input.name] = [];\r\n                                }\r\n                                values[input.name].push(input.value);\r\n                                break;\r\n                            case 'file':\r\n                                values[input.name] = input.files;\r\n                                break;\r\n                            default:\r\n                                values[input.name] = input.value;\r\n                        }\r\n\r\n                        return values;\r\n                    }, {});\r\n                    options.onSubmit(formValues);\r\n                }\r\n                // Trường hợp submit với hành vi mặc định\r\n                else {\r\n                    formElement.submit();\r\n                }\r\n            }\r\n        }\r\n\r\n        // Lặp qua mỗi rule và xử lý (lắng nghe sự kiện blur, input, ...)\r\n        options.rules.forEach(function (rule) {\r\n\r\n            // Lưu lại các rules cho mỗi input\r\n            if (Array.isArray(selectorRules[rule.selector])) {\r\n                selectorRules[rule.selector].push(rule.test);\r\n            } else {\r\n                selectorRules[rule.selector] = [rule.test];\r\n            }\r\n\r\n            var inputElements = formElement.querySelectorAll(rule.selector);\r\n\r\n            Array.from(inputElements).forEach(function (inputElement) {\r\n               // Xử lý trường hợp blur khỏi input\r\n                inputElement.onblur = function () {\r\n                    validate(inputElement, rule);\r\n                }\r\n\r\n                // Xử lý mỗi khi người dùng nhập vào input\r\n                inputElement.oninput = function () {\r\n                    var errorElement = getParent(inputElement, options.formGroupSelector).querySelector(options.errorSelector);\r\n                    errorElement.innerText = '';\r\n                    getParent(inputElement, options.formGroupSelector).classList.remove('invalid');\r\n                } \r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// Định nghĩa rules\r\n// Nguyên tắc của các rules:\r\n// 1. Khi có lỗi => Trả ra message lỗi\r\n// 2. Khi hợp lệ => Không trả ra cái gì cả (undefined)\r\nValidator.isRequired = function (selector, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            return value ? undefined :  message || 'Vui lòng nhập trường này'\r\n        }\r\n    };\r\n}\r\n\r\nValidator.isEmail = function (selector, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            return regex.test(value) ? undefined :  message || 'Trường này phải là email';\r\n        }\r\n    };\r\n}\r\n\r\nValidator.minLength = function (selector, min, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            return value.length >= min ? undefined :  message || `Vui lòng nhập tối thiểu ${min} kí tự`;\r\n        }\r\n    };\r\n}\r\n\r\nValidator.isConfirmed = function (selector, getConfirmValue, message) {\r\n    return {\r\n        selector: selector,\r\n        test: function (value) {\r\n            return value === getConfirmValue() ? undefined : message || 'Giá trị nhập vào không chính xác';\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}